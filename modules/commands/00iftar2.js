const axios = require('axios');
const fs = require('fs');
const moment = require('moment-timezone');

module.exports.config = {
        name: "iftar", 
        version: "1.0",
        credits: "asif",
        countdown: 5,
        hasPermssion: 0,
        description:"Get detailed Iftar time for a city.",
        commandCategory: "Islamic",
        usages: "<city name>" 
    },

exports.run = async function ({ api, args, event }) {
        const [cityName] = args;
      
       if (!cityName) {
         return api.sendMessage("‚ùé | Please Enter a City Name...", event.threadID, event.messageID);
       }
        try {
{ api.setMessageReaction("üê§", event.messageID, (err) => {}, true);
    }
            const response = await axios.get(`https://noobs-apihouse.onrender.com/dipto/iftar?name=${encodeURIComponent(cityName)}`);
            const iftarInfo = response.data;

            if (!iftarInfo) {
                return api.sendMessage("‚ùé | Iftar time not found or invalid response.", event.threadID);
            }

            const currentDate = moment().tz('Asia/Dhaka');

            const formattedResponse = `
ü§ç ùô∏ùöèùöùùöäùöõ ùöÉùöíùöñùöé ùôµùöòùöõ: ${cityName.toUpperCase()} ü•Ä

üìÖ ùô≥ùöäùö¢ - ${currentDate.format('dddd')}
ÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπè

‚ñ£ ùöÅùöäùöñùöäùöçùöäùöó: ${iftarInfo.ramadan}

‚ñ£ ùöÉùöòùöçùöäùö¢'ùöú ùô≥ùöäùöùùöé: ${iftarInfo.todaytime} 2024

‚ñ£ ùöÉùöòùöñùöòùöõùöõùöòùö†'ùöú ùô≥ùöäùöùùöé: ${iftarInfo.tomorrowtime} 2024

‚ñ£ ùô∏ùöèùöùùöäùöõ ùöÉùöíùöñùöé: ${iftarInfo.iftar_time}

‚ñ£ ùöÇùöéùöëùöõùöí ùöÉùöíùöñùöé: ${iftarInfo.sher_itime}

‚ñ£ ùöÇùöûùöóùöúùöéùöù ùöÉùöíùöñùöé: ${iftarInfo.sunset}

‚ñ£ ùôºùöäùöêùöëùöõùöíùöã ùöÉùô∏ùöñùöé: ${iftarInfo.oju_time_sondha}

‚ñ£ ùô∞ùöúùöõ ùöÉùöíùöñùöé: ${iftarInfo.oju_time_bikal}

‚ñ£ ùô≥ùöëùöûùöëùöõ ùöÉùöíùöñùöé: ${iftarInfo.oju_time_sokal}

‚ñ£ ùôµùöäùöìùöõ ùöÉùöíùöñùöé: ${iftarInfo.fazar_time}

‚ñ£ ùô≤ùöíùöùùö¢ùôΩùöäùöñùöé: ${cityName.toUpperCase()}
ÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπèÔπè

üïõ ùô≤ùöûùöõùöõùöéùöóùöù ùöÉùöíùöñùöé - ${currentDate.format('hh:mm A')}

ü•∞ ùêÄùê¨ùê¨ùêöùê•ùêöùê¶ùêÆ ùêÄùê•ùêöùê¢ùê§ùêÆùê¶ ü•∞
            `;

         const imageResponse = await axios.get(iftarInfo.url, {responseType: 'arraybuffer'});
      const filename = __dirname + `/cache/iftar.png`;
    fs.writeFileSync(filename, Buffer.from(imageResponse.data, 'binary'));
        await api.sendMessage({body: formattedResponse,attachment: fs.createReadStream(filename),},event.threadID,
() => fs.unlinkSync(filename),event.messageID);
    } catch (error) {
        console.error('‚ùé | Error fetching iftar data:', error);
        api.sendMessage("‚ùé | An error occurred while processing the request.", event.threadID);
    }
};
